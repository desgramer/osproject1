struct thread{
	int 64_t wakeup_tick;
}

static sturct list sleep_list;
static int64_t next_tick_to_awake;

void thread_init(void){
	list_init(&sleep_list);
}

void update_next_tick_to_awake(int64_t ticks){
	next_tick_to_awake = (next_tick_to_wake>ticks)?ticks : next_tick_to_awake;
}

int64_t get_next_tick_to_awake(void){
	return next_tick_to_awake;
}

void thread_sleep(int64_t ticks){
	struct thread *cur;
	
	enum intr_level old_level;
	old_level = intr_disable();
	
	cur = thread_current();
	ASSERT(cur!=idle_thread);
	
	update_next_tick_to_awake(cur->wakeup_tick = ticks);
	
	list_push_back(&sleep_list, &cur->elem);
	
	thread_block();
	
	intr_set_level(old level);
}
